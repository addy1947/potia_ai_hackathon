Title: Portia AI Docs
URL: https://docs.portialabs.ai
Words: 581
============================================================

On this page
Welcome to our docs!
Portia AI is an open source developer framework. We want to allow any developer to deploy agents that are transparent, steerable and authenticated.
Try out our product and give us some feedback on our
Discord channel (â†—)
Overview of Portia AI
The core product accessible in our
Github repository (â†—)
is extensible with our complimentary cloud features which are aimed at making production deployments easier and faster.
With our open source capabilities you should be able to:
Ingest a user query and leverage our system prompting to generate a structured plan.
Run a plan, invoking tools and tracking the plan run state at every step.
Build your own tools.
Define clarifications to interrupt a plan run and solicit structured human / machine input when necessary, e.g. to handle required authentication or missing input.
Our cloud offering, which can be enabled from the
Portia dashboard (â†—)
works seamlessly with our open source library. It will give you the ability to:
Store and retrieve plan run states and review historical plan runs.
Invoke tools from remote MCP servers and other cloud-hosted applications, with authentication handled for you.
Access the tool call logs of your plan runs.
Why Portia AI
We are beginning our journey as a developer framework by focusing on this problem set. Shout if you think we should add to this list
Problem
Portia's solution
Planning:
Many use cases require visibility into the LLMâ€™s reasoning,
particularly for complex tasks requiring multiple steps and tools.
LLMs also struggle picking the right tools as their tool set grows.
Pre-expressed plans:
Our open source, multi-shot prompter guides your LLM to
produce an explicit
Plan
in response to a prompt,
weaving the relevant tools, inputs, and outputs for every step.
Execution:
Tracking an LLMâ€™s progress mid-task is difficult, making it
harder to intervene when guidance is needed. This is especially critical for enforcing
company policies or correcting hallucinations (hello, missing arguments in tool calls!)
Stateful, steerable agents:
Portia will spin up a multi-agent
plan to execute and track its state throughout execution via a
PlanRun
. Using our
Clarification
abstraction you can
define points where you want to take control of plan runs e.g. to resolve missing
information or multiple choice decisions. Portia serialises the plan run state, and you can
manage its storage / retrieval yourself or use our cloud offering for simplicity.
Authentication:
Existing solutions often disrupt the user experience
with cumbersome authentication flows or require pre-emptive, full access to every toolâ€”an
approach that doesnâ€™t scale for multi-agent assistants.
Extensible, authenticated tool calling:
Bring your own tools on our
extensible
Tool
abstraction, or use
our growing plug and play authenticated
tool library
, which will include a number of
popular SaaS providers over time (Google, Zendesk, Hubspot, Github etc.). All Portia tools
feature just-in-time authentication with token refresh, offering security without
compromising on user experience.
Alright let's roll our sleeves up and get you spinning up them agents
! Next up we'll install
the SDK locally and validate your setup, before creating a Portia cloud account.
ðŸŽ‰ I'm feeling lucky
If you prefer to just dive right into an example, why not head over to the intro example in our
examples repo (â†—)
Setup and configuration
Install and setup
Get setup and run a query.
Set up a Portia account
Sign up for a Portia cloud account.
Manage your config
Learn how to configure your Portia.
Overview of Portia AI
Why Portia AI
Setup and configuration